rules_version = '2';

// Craft rules based on data in your Firestore database
// allow write: if firestore.get(
//    /databases/(default)/documents/users/$(request.auth.uid)).data.isAdmin;
service firebase.storage {
  match /b/{bucket}/o {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user is admin
    function isAdmin() {
      return isAuthenticated() && 
        firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Platform logo uploads - only admins can upload
    match /platform/logo/{allPaths=**} {
      allow read: if true; // Allow public read for logos
      allow write: if isAdmin(); // Only admins can upload/update logos
    }
    
    // User profile images - users can upload their own
    match /users/{userId}/profile/{allPaths=**} {
      allow read: if true; // Allow public read for profile images
      allow write: if isAuthenticated() && request.auth.uid == userId;
    }
    
    // Service images - authenticated users can upload
    match /services/{serviceId}/{allPaths=**} {
      allow read: if true; // Allow public read for service images
      allow write: if isAuthenticated();
    }
    
    // Default rule - deny all other access
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
